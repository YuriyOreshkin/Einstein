@model string
<script>

    
    function SaveTerms(e)
    {
        var editor = $("#terms-editor").data("kendoEditor");
        var editorContents = editor.encodedValue();       

         $.ajax({
                type: "POST",
                url: "@Url.Action("SaveTemplate", "TermsService")",
                datatype: 'json',
                data: { body: editorContents },
                success: function (data) {

                    if (data.message == "OK") {

                        showSuccess("Шаблон успешно сохранён!")

                    }
                    else {

                        showError(data.errors);

                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {

                    showError(thrownError + "-" + xhr.status);
                }
            });

    }


</script>

<div style="margin-left:auto;margin-right:auto;max-width:100%;height:86vh;">

    @(Html.Kendo().EditorFor(m=>m)
                                                                                  .Name("terms-editor")
                                                                                  .Tools(tools => tools.Clear()
                                                                                    .CustomTemplate(save => save.Template("" + Html.Kendo().Button().Name("terms-save").Icon("save").HtmlAttributes(new { @class = "k-primary" }).Content("Сохранить").Events(ev => ev.Click("SaveTerms")).ToClientTemplate()))
                                                                                    .Separator()
                                                                                    .Bold().Italic().Underline()
                                                                                    .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                                                                                     .Indent().Outdent()
                                                                                     .Separator()
                                                                                    .InsertUnorderedList().InsertOrderedList()
                                                                                    .Separator()
                                                                                    .InsertImage().CreateLink().Unlink()
                                                                                    .Separator()
                                                                                    .FontColor().FontName().FontSize()
                                                                                    .Separator()
                                                                                    .Print()
                                                                                    .Pdf()
                                                                                    .Separator()
                                                                                    .TableEditing()
                                                                                    

                        )
                        .ImageBrowser(imageBrowser => imageBrowser
                        .Image("~/Content/Images/{0}")
                        .Read("Read", "ImageBrowser")
                        .Create("Create", "ImageBrowser")
                        .Destroy("Destroy", "ImageBrowser")
                        .Upload("Upload", "ImageBrowser")
                        .Thumbnail("Thumbnail", "ImageBrowser")
                        )
                        .Messages(ms=>ms.ImageBrowser(br=>br.UploadFile("Загрузить").OrderBy("Сортировать")))
                        //.Pdf(pdf => pdf
                        //      .Margin(20, 20, 20, 20)
                        //      //.PaperSize("A4")
                        //      //.Scale(0.7)
                        //      .FileName("DSV.pdf")

                        // )
                        //.Messages(mes => mes.FontNameInherit("Arial Default").FontSizeInherit("7pt"))
                        .HtmlAttributes(new { style ="height: 100%;", aria_label = "editor" })
                        //.StyleSheets(css => css.Add(Url.Content("~/Content/editor.css")))
                        //.Value(Model.body)

                        )
</div>
